import pytest

from src.widget import get_date, mask_account_card


@pytest.mark.parametrize(
    "enter_value, expected_result",
    [
        ("Visa Platinum 7000792289606361", "Visa Platinum 7000 79** **** 6361"),
        ("Счет 64686473678894779589", "Счет **9589"),
        ("64686473678894779589", "**9589"),
        ("7000792289606361", "7000 79** **** 6361"),
        ("Visa Platinum 700079228960636", "Введены некорректные данные!"),
        ("Visa Platinum 70007922896063611", "Введены некорректные данные!"),
        ("Maestro 1596837868705199", "Maestro 1596 83** **** 5199"),
        ("Счет 6468647367889477958", "Введены некорректные данные!"),
        ("Счет 646864736788947795891", "Введены некорректные данные!"),
        ("kfjdhdksdjdhfurt", "Введены некорректные данные!"),
        ("lfjdhfgjfjsldturfjsd", "Введены некорректные данные!"),
        ("", "Введены некорректные данные!"),
        (" ", "Введены некорректные данные!"),
    ],
)
def test_mask_account_card_parametrize(enter_value, expected_result):
    """Проверяяем что функция корректно распознает и применяет тип маскировки,
    корректно работает с разными типами карт и счетов и с некорректными данными."""
    assert mask_account_card(enter_value) == expected_result


@pytest.mark.parametrize(
    "enter_value, expected_result",
    [
        ("2018-07-11T02:26:18.671407", "11.07.2018"),
        ("0000-00-00T02:26:18.671407", "Некорректная дата!"),
        ("", "Некорректная дата!"),
        (" ", "Некорректная дата!"),
        ("4563453263453252", "Некорректная дата!"),
        ("2025-03-11T02:26:18.671407", "Некорректная дата!"),
    ],
)
def test_get_data_parametrize(enter_value, expected_result):
    """Проверяем правильность преобразования даты,
    работу функции на различных входных форматах, в том числе отсутствие даты"""
    assert get_date(enter_value) == expected_result
